#define _CRT_SECURE_NO_WARNINGS

/*
ID: jamerz1
PROG: subset
LANG: C++11
*/

// C++11
#include <tuple>
#include <chrono>
#include <unordered_map>
#include <unordered_set>
#include <random>
#include <array>

// C++03
#include <cstring>
#include <algorithm>
#include <fstream>
#include <string>
#include <sstream>
#include <math.h>
#include <iomanip>
#include <stdlib.h>
#include <time.h>
#include <stack>
#include <queue>
#include <map>
#include <cstdio>
#include <ctime>
#include <list>
#include <set>
#include <stdio.h>
#include <bitset>
#include <functional> 
#include <locale>
#include <vector>
#include <streambuf>

#include <iostream>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;

const unsigned int MAX = 39;
const unsigned int MAX_SUM = (MAX * (MAX+1)) / 4;
int N;

ll table[MAX + 1][MAX_SUM + 1];

int main()
{
	ifstream fin("subset.in");
	fin >> N;
	fin.close();
	ofstream fout("subset.out");
	int sum = N*(N + 1) / 2;
	if (sum % 2 == 1) {
		fout << 0 << '\n';
		fout.close();
		return 0;
	}
	else
		sum /= 2;

	for (int i = 1; i <= sum; ++i)
		table[0][i] = 0;
	for (int i = 0; i <= N; ++i)
		table[i][0] = 1;
	
	for (int s = 1; s <= sum; ++s) {
		for (int k = 1; k <= N; ++k) {
			table[k][s] = table[k - 1][s] + (s - k >= 0 ? table[k - 1][s - k] : 0);
		}
	}

	fout << table[N][sum] / 2 << '\n';
	fout.close();

	return 0;
}
